/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/redux';


export namespace Components {

  interface CardPayment {
    'amount': number;
    'merchant': string;
    'reference': string;
  }
  interface CardPaymentAttributes extends StencilHTMLAttributes {
    'amount'?: number;
    'merchant'?: string;
    'reference'?: string;
  }

  interface PaymentForm {
    'amount': number;
    'merchant': string;
    'reference': string;
  }
  interface PaymentFormAttributes extends StencilHTMLAttributes {
    'amount'?: number;
    'merchant'?: string;
    'reference'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CardPayment': Components.CardPayment;
    'PaymentForm': Components.PaymentForm;
  }

  interface StencilIntrinsicElements {
    'card-payment': Components.CardPaymentAttributes;
    'payment-form': Components.PaymentFormAttributes;
  }


  interface HTMLCardPaymentElement extends Components.CardPayment, HTMLStencilElement {}
  var HTMLCardPaymentElement: {
    prototype: HTMLCardPaymentElement;
    new (): HTMLCardPaymentElement;
  };

  interface HTMLPaymentFormElement extends Components.PaymentForm, HTMLStencilElement {}
  var HTMLPaymentFormElement: {
    prototype: HTMLPaymentFormElement;
    new (): HTMLPaymentFormElement;
  };

  interface HTMLElementTagNameMap {
    'card-payment': HTMLCardPaymentElement
    'payment-form': HTMLPaymentFormElement
  }

  interface ElementTagNameMap {
    'card-payment': HTMLCardPaymentElement;
    'payment-form': HTMLPaymentFormElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
